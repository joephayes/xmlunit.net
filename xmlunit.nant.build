<?xml version="1.0"?>
<!--
  This file is licensed to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project name="xmlunit" description="XMLUnit for .Net" default="compile">
  <property name="build.target.framework" overwrite="false" value="3.5"/>

  <property name="project.version" value="2.0.0" overwrite="false"/>
  <property name="project.version4" value="${project.version}.0"
            overwrite="false"/>
  <property name="project.semantic.version" value="${project.version}-alpha-01"
            overwrite="false"/>

  <property name="base.dir" value="${project::get-base-directory()}"
    overwrite="false"/>
  <property name="core.src.dir" value="src/main/net-core" overwrite="false"/>
  <property name="core.tests.src.dir" value="${base.dir}/src/tests/net-core"
    overwrite="false"/>
  <property name="constraints.src.dir" value="src/main/net-constraints" overwrite="false"/>
  <property name="constraints.tests.src.dir" value="${base.dir}/src/tests/net-constraints"
    overwrite="false"/>

  <property name="build.dir" value="build/net" overwrite="false"/>
  <property name="gen.src.dir" value="${build.dir}/generated"
            overwrite="false"/>
  <property name="gen.core.dir" value="${gen.src.dir}/core"
            overwrite="false"/>
  <property name="gen.constraints.dir" value="${gen.src.dir}/constraints"
            overwrite="false"/>
  <property name="test.report.dir" value="${build.dir}/test-report"/>
  <property name="bin.dir" value="${build.dir}/bin" overwrite="false"/>
  <property name="tools.dir" value="tools" overwrite="false"/>
  <property name="nuget.dir" value="packages" overwrite="false"/>
  
  <property name="csc.verbose" value="false" overwrite="false"/>
  <property name="deploy.file" overwrite="false"
    value="${project::get-name()}-${project.version}.zip"/>
  
  <!-- *** You may need to edit these properties for your filesystem *** -->
  <property name="nunit.v2.assembly" value="nunit.framework.dll"
    overwrite="false"/>
  <property name="nunit.v2.bin.dir" overwrite="false"
    value="lib" />

  <property name="nuget.executable" overwrite="false" value="${tools.dir}/nuget.exe"/>
  <property name="nant.settings.currentframework" value="${framework::get-family(nant.settings.currentframework)}-${build.target.framework}" />

  <target name="init" description="prepare for other targets">
    <mkdir dir="${gen.core.dir}"/>
    <mkdir dir="${gen.constraints.dir}"/>
    <mkdir dir="${bin.dir}"/>
    <mkdir dir="${nuget.dir}"/>
    <mkdir dir="${tools.dir}"/>
    <copy file="${nunit.v2.bin.dir}/${nunit.v2.assembly}"
      tofile="${bin.dir}/${nunit.v2.assembly}"/>
  </target>
  
  <target name="clean" description="clean out compiled files">
    <delete dir="${build.dir}"/>
    <delete dir="${nuget.dir}"/>
  </target>
  
  <target name="compile-core"
          description="compile core source files" depends="init">
    <asminfo output="${gen.core.dir}/AssemblyInfo.cs" language="CSharp">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
        <import namespace="System.Runtime.InteropServices" />
        <import namespace="System.Runtime.CompilerServices" />
      </imports>
      <attributes>
        <attribute type="ComVisibleAttribute" value="false"/>
        <attribute type="CLSCompliantAttribute" value="true"/>
        <attribute type="AssemblyVersionAttribute" value="${project.version4}"/>
        <attribute type="AssemblyInformationalVersionAttribute" value="${project.semantic.version}"/>
        <attribute type="AssemblyCompanyAttribute" value="XmlUnit Contributors"/>
        <attribute type="AssemblyTitleAttribute" value="XMLUnit Core" />
        <attribute type="AssemblyDescriptionAttribute"
                   value="Core Classes of XMLUnit for .NET" />
        <attribute type="InternalsVisibleToAttribute"
                   value="${project::get-name()}-core.tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fdec9d5858956ff10ff9cf39935441a7d4a216475a467e951ddd8fcce0b74443696680a6cfb58f8b1d96166acb76f9eae0431a223cecb30e224c21f30e57c457747f6ba176e6c22f48e105b200b458509b6de815cccdfc9ebe59ae4024c4b8659d2f2fcb65b1688f8327b10c96ed7e5f536ba6a1978ae86aca438439efbd6cb6"/>
      </attributes>
    </asminfo>
    <csc target="library" output="${bin.dir}/${project::get-name()}-core.dll"
         debug="true" verbose="${csc.verbose}" keyfile="xmlunit.snk">
      <sources basedir="${base.dir}">
        <include name="${gen.core.dir}**/*.cs"/>
        <include name="${core.src.dir}/**/*.cs"/>
      </sources>
      <references>
        <include name="System.Xml.Linq.dll"/>
      </references>
    </csc>
  </target>
    
  <target name="compile-constraints" depends="compile-core"
          description="compile constraints source files">
    <asminfo output="${gen.constraints.dir}/AssemblyInfo.cs" language="CSharp">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
        <import namespace="System.Runtime.InteropServices" />
        <import namespace="System.Runtime.CompilerServices" />
      </imports>
      <attributes>
        <attribute type="ComVisibleAttribute" value="false"/>
        <attribute type="CLSCompliantAttribute" value="true"/>
        <attribute type="AssemblyVersionAttribute" value="${project.version4}"/>
        <attribute type="AssemblyInformationalVersionAttribute" value="${project.semantic.version}"/>
        <attribute type="AssemblyCompanyAttribute" value="XmlUnit Contributors"/>
        <attribute type="AssemblyTitleAttribute" value="XMLUnit Constraints for NUnit" />
        <attribute type="AssemblyDescriptionAttribute"
                   value="Constraints Classes of XMLUnit for .NET" />
        <attribute type="InternalsVisibleToAttribute"
                   value="${project::get-name()}-constraints.tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100fdec9d5858956ff10ff9cf39935441a7d4a216475a467e951ddd8fcce0b74443696680a6cfb58f8b1d96166acb76f9eae0431a223cecb30e224c21f30e57c457747f6ba176e6c22f48e105b200b458509b6de815cccdfc9ebe59ae4024c4b8659d2f2fcb65b1688f8327b10c96ed7e5f536ba6a1978ae86aca438439efbd6cb6"/>
      </attributes>
    </asminfo>
    <csc target="library" output="${bin.dir}/${project::get-name()}-constraints.dll"
         debug="true" verbose="${csc.verbose}" keyfile="xmlunit.snk">
      <sources basedir="${base.dir}">
        <include name="${gen.constraints.dir}/**/*.cs"/>
        <include name="${constraints.src.dir}/**/*.cs"/>
      </sources>
      <references basedir="${bin.dir}">
        <include name="${project::get-name()}-core.dll"/>
        <include name="${nunit.v2.assembly}"/>
      </references>
    </csc>
  </target>
    
  <target name="compile" description="compile all source files"
          depends="compile-core,compile-constraints"/>

  <target name="compile-core-tests" depends="compile">
    <csc target="library"
      output="${bin.dir}/${project::get-name()}-core.tests.dll"
      debug="true" verbose="${csc.verbose}" keyfile="xmlunit.snk">
      <references basedir="${bin.dir}">
        <include name="${project::get-name()}-core.dll"/>
        <include name="${nunit.v2.assembly}"/>
        <include name="System.Xml.Linq.dll"/>
      </references>
      <sources basedir="${core.tests.src.dir}">
        <include name="**/*.cs"/>
      </sources>
    </csc>
  </target>
  
  <target name="compile-constraints-tests"
          depends="compile-constraints,compile-core-tests">
    <csc target="library"
      output="${bin.dir}/${project::get-name()}-constraints.tests.dll"
      debug="true" verbose="${csc.verbose}" keyfile="xmlunit.snk">
      <references basedir="${bin.dir}">
        <include name="${project::get-name()}-core.dll"/>
        <include name="${project::get-name()}-constraints.dll"/>
        <include name="${project::get-name()}-core.tests.dll"/>
        <include name="${nunit.v2.assembly}"/>
      </references>
      <sources basedir="${constraints.tests.src.dir}">
        <include name="**/*.cs"/>
      </sources>
    </csc>
  </target>
  
  <target name="compile-tests"
          depends="compile-core-tests,compile-constraints-tests"/>

  <target name="test" description="run all tests" depends="compile-tests">
    <nunit2>
      <formatter type="Plain"/>
      <formatter type="Xml" usefile="true" outputdir="${test.report.dir}"/>
      <test assemblyname="${bin.dir}/${project::get-name()}-core.tests.dll"/>
      <test assemblyname="${bin.dir}/${project::get-name()}-constraints.tests.dll"/>
    </nunit2>
  </target>
  
  <target name="deploy" description="zip all code for deployment"
    depends="test">
    <delete file="${build.dir}/${deploy.file}" failonerror="false"/>
    <zip zipfile="${build.dir}/${deploy.file}">
      <fileset basedir="${base.dir}">
        <include name="LICENSE"/> 
        <include name="README.md"/> 
        <include name="*.build"/>
        <include name="**/*.cs"/>
        <include name="./tests/etc/**/*.*"/>
        <include name="**/${project::get-name()}*.dll"/>
        <exclude name="**/AllTests.cs"/>
      </fileset>
    </zip>
  </target>

  <target name="init-nuget" description="ensures nuget.exe is available">
    <if test="${not file::exists(nuget.executable)}">
      <get src="http://nuget.org/nuget.exe" dest="${nuget.executable}" />
    </if>
  </target>

  <target name="create-nupkg" description="create NuGet package"
      depends="compile-core init-nuget">
    <if test="${not string::starts-with(framework::get-runtime-framework(), 'mono')}">
      <exec program="${nuget.executable}">
        <arg value="pack"/>
        <arg value="xmlunit.nuspec"/>
        <arg value="-OutputDirectory"/>
        <arg value="${nuget.dir}"/>
        <arg value="-Version"/>
        <arg value="${project.semantic.version}"/>
        <arg value="-NonInteractive"/>
      </exec>
    </if>
    <if test="${string::starts-with(framework::get-runtime-framework(), 'mono')}">
      <exec program="mono">
        <arg value="${nuget.executable}"/>
        <arg value="pack"/>
        <arg value="xmlunit.nuspec"/>
        <arg value="-OutputDirectory"/>
        <arg value="${nuget.dir}"/>
        <arg value="-Version"/>
        <arg value="${project.semantic.version}"/>
        <arg value="-NonInteractive"/>
      </exec>
    </if>
  </target>

  <target name="publish-nupkg" description="publish NuGet package"
      depends="init-nuget create-nupkg">
    <exec program="${nuget.executable}">
      <arg value="delete"/>
      <arg value="${project::get-name()}.core"/>
      <arg value="${project.semantic.version}"/>
      <arg value="-NonInteractive"/>
    </exec>
    <exec program="${nuget.executable}">
      <arg value="push"/>
      <arg value="${nuget.dir}/${project::get-name()}.core.${project.semantic.version}.nupkg"/>
      <arg value="-Timeout"/>
      <arg value="60"/>
      <arg value="-NonInteractive"/>
    </exec>
  </target>

  <target name="nuget" description="create and publish NuGet package"
      depends="create-nupkg,publish-nupkg"/>

  <target name="all" description="execute all tasks in the project"
    depends="clean,compile,test,deploy,nuget"/>
  
</project>
